class Point:
# Вместо функции coords мы можем сразу же вписать координаты с помощью 
# магического метода __init__    
    '''def coords(self,x,y):
        self.X = x
        self.Y = y'''
    
    def __init__(self,x,y):
        self.X = x
        self.Y = y
    '''  __init__ вызывается сразу после объявления объекта!
    Это значит что при объявлении объекта мы обязаны сразу писать переменные
    которые мы указали (в нашем случае x и y)'''
    def get(self):
        return(self.X)
    
    def __del__(self):
        print('Delete object ' + str(self))

pt = Point(1,3)
print(pt.__dict__) #{'X': 1, 'Y': 3}

# Это значит что __init__ вызывается сразу и к ней нельзя обратиться повторно
#  но является точно такой же функцией ,как все другие
'''Другими (простыми) словами это инициализатор, который позволяет без доп.функций
        присваивать значения атрибутам класса   '''

print(pt.X + pt.Y)
'''Общий вывод:
>>> {'X': 1, 'Y': 3} 
>>> 4
>>> Delete object <__main__.Point object at 0x0000024EA156BDC0>'''
# Почему же вывелась последняя строка?
# Благодаря функции __del__
# Эта функция выполянется перед удалением объекта Garbage Collector'ом (втроен в Python)
# А удаляет объект сборщик мусора тогда, когда на объект больше нет ни одной ссылки
'''Другими (простыми) словами это финализатор, который позволяет
    объекту 'сказать последние слова перед смертью'. Ну или сделать какие-то действия :3 '''
...